# Generated by Django 5.2.6 on 2025-09-13 11:04

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EducationFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Формат обучения',
                'verbose_name_plural': 'Форматы обучения',
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('slug', models.CharField(blank=True, max_length=255, null=True, verbose_name='ЧПУ')),
                ('short_description', models.TextField(blank=True, null=True, verbose_name='Короткое описание')),
            ],
            options={
                'verbose_name': 'Факультет',
                'verbose_name_plural': 'Факультеты',
            },
        ),
        migrations.CreateModel(
            name='LectureFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('color', models.CharField(max_length=7, verbose_name='Цвет (#HEX)')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='lectures/icons/', verbose_name='Иконка')),
            ],
            options={
                'verbose_name': 'Формат лекций',
                'verbose_name_plural': 'Форматы лекций',
            },
        ),
        migrations.CreateModel(
            name='ProgramAboutItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('text', models.TextField(verbose_name='Текст')),
                ('block_type', models.CharField(choices=[('default', 'Белый'), ('primary', 'Красный'), ('fark', 'Темный')], max_length=10, verbose_name='Вид плашки')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок вывода')),
            ],
            options={
                'verbose_name': "Пункт 'О программе'",
                'verbose_name_plural': "Пункты 'О программе'",
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ProgramModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок вывода')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('files', models.FileField(blank=True, null=True, upload_to='programs/modules/files/', verbose_name='Файлы')),
            ],
            options={
                'verbose_name': 'Модуль обучения',
                'verbose_name_plural': 'Модули обучения',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ProgramModuleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Пункт')),
            ],
            options={
                'verbose_name': 'Пункт модуля',
                'verbose_name_plural': 'Пункты модулей',
            },
        ),
        migrations.CreateModel(
            name='EducationProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_on_main', models.BooleanField(default=False, verbose_name='Показать на главной')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок вывода')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('slug', models.CharField(blank=True, max_length=255, null=True, verbose_name='ЧПУ')),
                ('background_image', models.ImageField(blank=True, null=True, upload_to='programs/backgrounds/', verbose_name='Фотография на задний фон')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='programs/covers/', verbose_name='Фотография обложка')),
                ('short_description', models.TextField(blank=True, null=True, verbose_name='Короткое описание')),
                ('duration', models.CharField(blank=True, max_length=255, null=True, verbose_name='Срок обучения (текстовое)')),
                ('price', models.CharField(blank=True, max_length=255, null=True, verbose_name='Стоимость (текстовое)')),
                ('start_date', models.CharField(blank=True, max_length=255, null=True, verbose_name='Дата начала (текстовое)')),
                ('video', models.FileField(blank=True, null=True, upload_to='programs/videos/', verbose_name='Видео файл')),
                ('video_text', models.TextField(blank=True, null=True, verbose_name='Текст на видео блок')),
                ('format', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='programs', to='data.educationformat', verbose_name='Формат обучения')),
            ],
            options={
                'verbose_name': 'Программа обучения',
                'verbose_name_plural': 'Программы обучения',
                'ordering': ['order'],
            },
        ),
    ]
